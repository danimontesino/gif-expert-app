{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","categoria","a","url","fetch","resp","json","data","dataGifs","map","gif","id","title","images","downsized_medium","console","log","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,8BACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAmBXG,YAAY,qB,+BC1BnBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,+DAEAG,MAAOD,GAFP,cAEbE,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAWD,EAAKE,KAAI,SAAAC,GACtB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAIzCY,QAAQC,IAAIR,GAZO,kBAaZA,GAbY,4CAAH,sDCEPS,EAAc,SAAEC,GACzB,IAAOf,EAAce,EAAdf,IAAKS,EAASM,EAATN,MAEZ,OACI,sBAAKO,UAAU,2BAAf,UACI,qBAAKC,IAAKjB,EAAKS,MAAOA,EAAOS,IAAKT,IAClC,4BAAIA,QCJHU,EAAU,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,UACrB,ECFwB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BqB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OALAC,qBAAW,WACP1B,EAAQC,GACH0B,MAAM,SAAAnB,GAAQ,OAAIiB,EAAS,CAAClB,KAAMC,EAAWe,SAAS,SAC5D,CAACtB,IAEGuB,EDTsBI,CAAa3B,GAA9B4B,EAAZ,EAAOtB,KAAWgB,EAAlB,EAAkBA,QAElB,OACI,qCACI,6BAAKtB,IAEJsB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SACMU,EAAKpB,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEXjCmB,EAAe,WACxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEE8C,EAAWtB,KAAI,SAAAR,GAAS,OAAI,cAAC,EAAD,CAAyBA,UAAWA,EAApC,SAAgDA,GAAlCA,U,MCZxD+B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8800f8a3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                    placeholder=\"Buscar gifs\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${categoria}&limit=10&api_key=HOZr42vJ2MGS5JsGQdwfpxfh26xeDf9a`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const dataGifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log(dataGifs);\r\n    return dataGifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n    const {url, title} = props;\r\n\r\n    return (\r\n        <div className=\"card animate__fadeInDown\">\r\n            <img src={url} title={title} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    const {data:gifs, loading} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n\r\n            {loading && <p>Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                { gifs.map( gif => (\r\n                        <GifGridItem key={gif.id} {...gif}/>\r\n                    )\r\n                )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(categoria)\r\n            .then( dataGifs => setState({data: dataGifs , loading: false}) );\r\n    }, [categoria]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categorias, setCategorias] = useState(['One Piece'])\r\n\r\n    /* const handleAdd = () => {\r\n        //setCategorias([...categorias, 'One Piece']);\r\n        setCategorias(cats => [...cats, 'One Piece']);\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h3>GifExpertApp</h3>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr/>\r\n\r\n            { categorias.map(categoria => <GifGrid key={categoria} categoria={categoria}>{categoria}</GifGrid>) }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}